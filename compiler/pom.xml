<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.muyuanjin</groupId>
        <artifactId>fast-compiler</artifactId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>compiler</artifactId>


    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <argLine>
            -Dfile.encoding=UTF-8
            -Dsun.jnu.encoding=UTF-8
            --add-opens=java.base/java.lang=ALL-UNNAMED
            --add-opens=java.base/java.lang.reflect=ALL-UNNAMED
            --add-opens=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED
            --add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED
            --add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED
            --add-opens=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED
            --add-opens=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED
            --add-opens=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED
            --add-opens=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED
            --add-opens=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED
            --add-opens=jdk.compiler/com.sun.tools.javac.platform=ALL-UNNAMED
        </argLine>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.github.ben-manes.caffeine</groupId>
            <artifactId>caffeine</artifactId>
            <version>${caffeine.version}</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.janino</groupId>
            <artifactId>janino</artifactId>
            <version>${janino.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.codehaus.janino</groupId>
            <artifactId>commons-compiler-jdk</artifactId>
            <version>${janino.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jdt</groupId>
            <artifactId>ecj</artifactId>
            <version>${ecj.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.openjdk.jmh</groupId>
            <artifactId>jmh-core</artifactId>
            <version>${jmh.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.openjdk.jmh</groupId>
            <artifactId>jmh-generator-annprocess</artifactId>
            <version>${jmh.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.version}</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.13.0</version>
                <configuration>
                    <compilerArgs>
                        <arg>-parameters</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED</arg>
                        <arg>--add-exports</arg>
                        <arg>jdk.compiler/com.sun.tools.javac.platform=ALL-UNNAMED</arg>
                    </compilerArgs>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.openjdk.jmh</groupId>
                            <artifactId>jmh-generator-annprocess</artifactId>
                            <version>${jmh.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <!--  使用该组件的项目需要添加 addOpens -->
            <!--            <plugin>-->
            <!--                <groupId>org.apache.maven.plugins</groupId>-->
            <!--                <artifactId>maven-jar-plugin</artifactId>-->
            <!--                <version>${maven-jar-plugin.version}</version>-->
            <!--                <configuration>-->
            <!--                    &lt;!&ndash; 将源代码排除在最终 jar 文件之外 &ndash;&gt;-->
            <!--                    <excludes>-->
            <!--                        <exclude>**/*.java</exclude>-->
            <!--                    </excludes>-->
            <!--                    <archive>-->
            <!--                        <manifestEntries>-->
            <!--                            &lt;!&ndash; 通过在MANIFEST.MF文件中加入Add-Opens参数达到不带参jar启动与带参启动相同的效果  &ndash;&gt;-->
            <!--                            <Add-Opens>java.base/java.lang java.base/java.lang.invoke java.base/java.lang.reflect-->
            <!--                                jdk.compiler/com.sun.tools.javac.api jdk.compiler/com.sun.tools.javac.code-->
            <!--                                jdk.compiler/com.sun.tools.javac.comp jdk.compiler/com.sun.tools.javac.file-->
            <!--                                jdk.compiler/com.sun.tools.javac.tree jdk.compiler/com.sun.tools.javac.util-->
            <!--                                jdk.compiler/com.sun.tools.javac.main jdk.compiler/com.sun.tools.javac.model-->
            <!--                                jdk.compiler/com.sun.tools.javac.platform-->
            <!--                            </Add-Opens>-->
            <!--                        </manifestEntries>-->
            <!--                    </archive>-->
            <!--                </configuration>-->
            <!--            </plugin>-->
            <!-- 如果你是在SpringBoot中使用的话 -->
            <!--            <plugin>-->
            <!--                <groupId>org.springframework.boot</groupId>-->
            <!--                <artifactId>spring-boot-maven-plugin</artifactId>-->
            <!--                <version>${spring-boot.version}</version>-->
            <!--                <configuration>-->
            <!--                    <jvmArguments>${argLine}</jvmArguments>-->
            <!--                </configuration>-->
            <!--            </plugin>-->
            <!-- IDEA会自动读取 argLine参数来运行junit测试 -->
            <!--            <plugin>-->
            <!--                <groupId>org.apache.maven.plugins</groupId>-->
            <!--                <artifactId>maven-surefire-plugin</artifactId>-->
            <!--                <version>${maven-surefire-plugin.version}</version>-->
            <!--                <configuration>-->
            <!--                    <argLine>${argLine}</argLine>-->
            <!--                </configuration>-->
            <!--            </plugin>-->
        </plugins>
    </build>
</project>